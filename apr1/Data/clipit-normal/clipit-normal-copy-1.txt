# task 1 - copy 1
'.platform-win32, .platform-win32 .atom-workspace':
  'ctrl-c':       'clipboard-history:copy'
  'ctrl-shift-v': 'clipboard-history:paste'

#task 2 - copy 1
{
  'label': 'Copy',
  'command': 'clipboard-history:copy'
},

#task 3 - copy 2
'submenu': [
  { 'label': 'Copy', 'command': 'clipboard-history:copy' }
  { 'label': 'Paste', 'command': 'clipboard-history:paste' }
]

#task 5 - copy 3
enableCopyLine:
  type: 'boolean'
  default: true
  title: 'Enable Copy Line'
  description: 'Copy the whole line when no selection'


#task 7 - copy 1
"name": "clipboard-history",
"author": {
  "name": "Group G"
},

#task 7 - copy 3
editor: null
forceClear: false
workspaceView: atom.views.getView(atom.workspace)

# Public methods
###############################
initialize: (@history, @editorView) ->
  super
  @addClass('clipboard-history')
  @_handleEvents()

#task 9 - copy 1
selectItemView: (view) ->
  # Default behaviour
  return unless view.length
  @list.find('.selected').removeClass('selected')
  view.addClass 'selected'
  @scrollToItemView view

  # Show preview
  @list.find('.preview').addClass('hidden')
  preview = view.find '.preview'
  if preview.length isnt 0 and preview.text().length > 65 and atom.config.get 'clipboard-history.showSnippetForLargeItems'
    if view.position().top isnt 0
      preview.css({ 'top': (view.position().top - 5) + 'px'})
    preview.removeClass 'hidden'

#task 10 - copy 1
confirmed: (item) ->
  if item.clearHistory?
    @history = []
    @forceClear = true
  else
    @history.splice(@history.indexOf(item), 1)
    @history.push(item)
    atom.clipboard.write(item.text)
    atom.workspace.getActivePaneItem().insertText item.text,
      select: true
  @cancel()
, 2016-03-27 21:22:49, [u'Atom', u'source1 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
# task 1 - copy 1
'.platform-win32, .platform-win32 .atom-workspace':
  'ctrl-c':       'clipboard-history:copy'
  'ctrl-shift-v': 'clipboard-history:paste', 2016-03-27 21:23:17, [u'Atom', u'source1 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
# task 1 - copy 2
'.platform-linux, .platform-linux .atom-workspace':
  'ctrl-c':       'clipboard-history:copy'
  'ctrl-shift-v': 'clipboard-history:paste', 2016-03-27 21:23:53, [u'Atom', u'source2 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 2 - copy 1
{
  'label': 'Copy',
  'command': 'clipboard-history:copy'
},, 2016-03-27 21:24:53, [u'Atom', u'source1 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 2 - copy 2
{
  'label': 'Paste',
  'command': 'core:paste'
},, 2016-03-27 21:25:23, [u'Atom', u'source4 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 2 - copy 3
{
  'label': 'Paste History',
  'command': 'clipboard-history:paste'
},
, 2016-03-27 21:25:32, [u'Atom', u'source3 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 2 - copy 4
{
  'label': 'Separator',
  'command': '-'
}, 2016-03-27 21:25:46, [u'Atom', u'source2 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
, 2016-03-27 21:25:46, [u'Atom', u'source2 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 2 - copy 4
{
  'label': 'Separator',
  'command': '-'
}, 2016-03-27 21:25:46, [u'Atom', u'source2 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
, 2016-03-27 21:26:13, [u'firefox', u'Mozilla Firefox']
#task 3 - copy 1
'menu': [
  {
    'label': 'Packages'
    'submenu': [
      'label': 'Clipboard History'
      #task 3 - 2nd paste below here!

    ]
  }
]
, 2016-03-27 21:26:13, [u'firefox', u'Mozilla Firefox']
#task 3 - copy 2
'submenu': [
  { 'label': 'Copy', 'command': 'clipboard-history:copy' }
  { 'label': 'Paste', 'command': 'clipboard-history:paste' }
], 2016-03-27 21:26:56, [u'Atom', u'source1 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
//task 4 - copy 1
      pre {
        width: 330px;
        height: auto;
        max-height: 400px;
        font-family: Inconsolata, Monaco, Consolas, 'Courier New', Courier;
        font-size: 9px;
        border-radius: 2px;
        overflow-x: scroll;
      }
    }
  }
}, 2016-03-27 21:27:47, [u'Atom', u'source4 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
//task 4 - copy 2
.preview {
  position: absolute;
  top: 42px;
  left: 370px;
  opacity: 0.7;
, 2016-03-27 21:28:06, [u'Atom', u'source4 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
.clipboard-history {

  ol.list-group {
    position: static;, 2016-03-27 21:28:20, [u'Atom', u'source4 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
//task 4 - copy 3
.clipboard-history {

  ol.list-group {
    position: static;, 2016-03-27 21:28:27, [u'Atom', u'source4 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 5 - copy 3
enableCopyLine:
  type: 'boolean'
  default: true
  title: 'Enable Copy Line'
  description: 'Copy the whole line when no selection', 2016-03-27 21:29:32, [u'Atom', u'source1 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 5 - copy 2
showClearHistoryButton:
  type: 'boolean'
  default: true
  title: 'Show Clear History'
  description: 'Display a button to clear your clipboard\'s history', 2016-03-27 21:30:20, [u'Atom', u'source3 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 5 - copy 1
showSnippetForLargeItems:
  type: 'boolean'
  default: true
  title: 'Show Snippet'
  description: 'When a long clipboard item, preview it a separate tooltip', 2016-03-27 21:30:38, [u'Atom', u'source2 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 6 - copy 1
deactivate: ->
  @subscriptions.dispose(), 2016-03-27 21:31:12, [u'Atom', u'source2 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
, 2016-03-27 21:31:28, [u'Atom', u'source3 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 6 - copy 2
activate: () ->
  @subscriptions = new CompositeDisposable
  @clipboard = new ClipboardHistoryView @history, atom.workspace.getActivePaneItem(), 2016-03-27 21:31:28, [u'Atom', u'source3 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 6 - copy 3
history: []
clipboard: null
subscriptions: null, 2016-03-27 21:31:41, [u'Atom', u'source4 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 7 - copy 1
"name": "clipboard-history",
"author": {
  "name": "Group G"
},

#task 7 - copy 3
editor: null
forceClear: false
workspaceView: atom.views.getView(atom.workspace), 2016-03-27 21:32:58, [u'Atom', u'source1 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 7 - copy 1
"name": "clipboard-history",
"author": {
  "name": "Group G"
},, 2016-03-27 21:33:07, [u'Atom', u'package.json \u2014 /Users/arjun/Experiments/experiment - clipit-normal']

#task 7 - copy 3
editor: null
forceClear: false
workspaceView: atom.views.getView(atom.workspace), 2016-03-27 21:33:14, [u'Atom', u'package.json \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
, 2016-03-27 21:33:17, [u'Atom', u'package.json \u2014 /Users/arjun/Experiments/experiment - clipit-normal']

#task 7 - copy 3
editor: null
forceClear: false
workspaceView: atom.views.getView(atom.workspace), 2016-03-27 21:33:17, [u'Atom', u'package.json \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 7 - copy 2
"main": "./lib/clipboard-history",
"version": "0.1.0",
"description": "Keep a history of your clipboard items. Let you paste them back in, as needed.",
"activationCommands": {
  "atom-workspace": [
    "clipboard-history:copy",
    "clipboard-history:paste"
  ]
},, 2016-03-27 21:33:41, [u'Atom', u'source2 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 7 - copy 3
editor: null
forceClear: false
workspaceView: atom.views.getView(atom.workspace), 2016-03-27 21:33:49, [u'Atom', u'package.json \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 7 - copy 4
# Overrides (Select List)
###############################
viewForItem: ({text, date, clearHistory}) ->
  if clearHistory
    $$ ->
      @li class: 'two-lines text-center', =>
        @span text
  else
    text = @_limitString text, 65
    date = @_timeSince date

    $$ ->
      @li class: 'two-lines', =>
        @div class: 'pull-right secondary-line', =>
          @span date
        @span text.limited

        # Preview
        if atom.config.get 'clipboard-history.showSnippetForLargeItems'
          @div class: 'preview hidden panel-bottom padded', =>
            @pre text.initial, 2016-03-27 21:34:38, [u'Atom', u'source2 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
, 2016-03-27 21:35:00, [u'Atom', u'source3 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 8 - copy 1
"repository": "https://github.com/cleebp/csc-510-group-g/tree/master/apr1/experiment/base",
"license": "MIT",
"engines": {
  "atom": ">=0.174.0",
  "jquery": "^2"
},, 2016-03-27 21:35:00, [u'Atom', u'source3 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
# task 8 - copy 2
"dependencies": {
  "atom-space-pen-views": "^2.0.3"
}
, 2016-03-27 21:35:15, [u'Atom', u'source4 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 8 - copy 3
copy: ->
  @storeFocusedElement()
  @editor = atom.workspace.getActiveTextEditor()

  if @editor
    selectedText = @editor.getSelectedText()
    if selectedText.length > 0
      @_add selectedText
    else if atom.config.get 'clipboard-history.enableCopyLine'
      #@editor.buffer.beginTransaction()
      originalPosition = @editor.getCursorBufferPosition()
      @editor.selectLinesContainingCursors()
      selectedText = @editor.getSelectedText()
      @editor.setCursorBufferPosition originalPosition
      #@editor.buffer.commitTransaction()
      if selectedText.length > 0
        atom.clipboard.metadata = atom.clipboard.metadata || {}
        atom.clipboard.metadata.fullline = true
        atom.clipboard.metadata.fullLine = true
        @_add selectedText, atom.clipboard.metadata, 2016-03-27 21:36:00, [u'Atom', u'source3 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 8 - copy 4
paste: ->
  exists = false
  clipboardItem = atom.clipboard.read()

  # Check OS clipboard
  if clipboardItem.length > 0 and not @forceClear
    for item in @history
      if item.text is clipboardItem
        exists = true
    if not exists
      @_add clipboardItem

  # Attach to view
  if @history.length > 0
    @setItems @history.slice(0).reverse()
  else
    @setError "There are no items in your clipboard."
  @_attach(), 2016-03-27 21:36:28, [u'Atom', u'source4 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 9 - copy 3
# Helper methods
##############################
_add: (element, metadata = {}) ->
  atom.clipboard.write element, metadata
  @forceClear = false

  if @history.length is 0 and atom.config.get 'clipboard-history.showClearHistoryButton'
    @history.push
      text: 'Clear History',
      clearHistory: true

  @history.push
    'text': element
    'date': Date.now(), 2016-03-27 21:37:21, [u'Atom', u'source3 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
, 2016-03-27 21:37:43, [u'Atom', u'source3 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 9 - copy 3
# Helper methods
##############################
_add: (element, metadata = {}) ->
  atom.clipboard.write element, metadata
  @forceClear = false

  if @history.length is 0 and atom.config.get 'clipboard-history.showClearHistoryButton'
    @history.push
      text: 'Clear History',
      clearHistory: true

  @history.push
    'text': element
    'date': Date.now()

#task 10 - copy 3
_handleEvents: ->

  atom.commands.add 'atom-workspace',
    'clipboard-history:copy': (event) =>
      @copy()

  atom.commands.add 'atom-workspace',
    'clipboard-history:paste': (event) =>
      if @panel?.isVisible()
        @cancel()
      else
        @paste()
, 2016-03-27 21:37:43, [u'Atom', u'source3 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']

  #task 10 - copy 3
  _handleEvents: ->

    atom.commands.add 'atom-workspace',
      'clipboard-history:copy': (event) =>
        @copy()

    atom.commands.add 'atom-workspace',
      'clipboard-history:paste': (event) =>
        if @panel?.isVisible()
          @cancel()
        else
          @paste(), 2016-03-27 21:38:00, [u'Atom', u'clipboard-history-view.coffee \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 9 - copy 2
getFilterKey: ->
  'text'

#task 10 - copy 2
cancelled: ->
  @panel?.hide()
, 2016-03-27 21:38:14, [u'Atom', u'source2 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
  #task 10 - copy 2
  cancelled: ->
    @panel?.hide(), 2016-03-27 21:38:25, [u'Atom', u'clipboard-history-view.coffee \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 9 - copy 4
_setPosition: ->
  @panel.item.parent().css('margin-left': 'auto', 'margin-right': 'auto', top: 200, bottom: 'inherit')

_attach: ->
  @panel ?= atom.workspace.addModalPanel(item: this)
  @_setPosition()
  @panel.show()

  @focusFilterEditor()

#task 10 - copy 4
_timeSince: (date) ->
  if date
    seconds = Math.floor((new Date() - date) / 1000)
    interval = Math.floor(seconds / 3600)
    return interval + " hours ago"  if interval > 1

    interval = Math.floor(seconds / 60)
    return interval + " minutes ago"  if interval > 1

    return Math.floor(seconds) + " seconds ago" if seconds > 0
    return "now"

_limitString: (string, limit) ->
  text = {}
  text.initial = text.limited = string
  if string.length > limit
    text.limited = string.substr(0, limit) + ' ...'
  return text, 2016-03-27 21:38:40, [u'Atom', u'source4 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']

  #task 10 - copy 4
  _timeSince: (date) ->
    if date
      seconds = Math.floor((new Date() - date) / 1000)
      interval = Math.floor(seconds / 3600)
      return interval + " hours ago"  if interval > 1

      interval = Math.floor(seconds / 60)
      return interval + " minutes ago"  if interval > 1

      return Math.floor(seconds) + " seconds ago" if seconds > 0
      return "now"

  _limitString: (string, limit) ->
    text = {}
    text.initial = text.limited = string
    if string.length > limit
      text.limited = string.substr(0, limit) + ' ...'
    return text, 2016-03-27 21:38:50, [u'Atom', u'clipboard-history-view.coffee \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
#task 9 - copy 1
selectItemView: (view) ->
  # Default behaviour
  return unless view.length
  @list.find('.selected').removeClass('selected')
  view.addClass 'selected'
  @scrollToItemView view

  # Show preview
  @list.find('.preview').addClass('hidden')
  preview = view.find '.preview'
  if preview.length isnt 0 and preview.text().length > 65 and atom.config.get 'clipboard-history.showSnippetForLargeItems'
    if view.position().top isnt 0
      preview.css({ 'top': (view.position().top - 5) + 'px'})
    preview.removeClass 'hidden'

#task 10 - copy 1
confirmed: (item) ->
  if item.clearHistory?
    @history = []
    @forceClear = true
  else
    @history.splice(@history.indexOf(item), 1)
    @history.push(item)
    atom.clipboard.write(item.text)
    atom.workspace.getActivePaneItem().insertText item.text,
      select: true
  @cancel(), 2016-03-27 21:39:02, [u'Atom', u'source1 \u2014 /Users/arjun/Experiments/experiment - clipit-normal']

  #task 10 - copy 1
  confirmed: (item) ->
    if item.clearHistory?
      @history = []
      @forceClear = true
    else
      @history.splice(@history.indexOf(item), 1)
      @history.push(item)
      atom.clipboard.write(item.text)
      atom.workspace.getActivePaneItem().insertText item.text,
        select: true
    @cancel(), 2016-03-27 21:39:17, [u'Atom', u'clipboard-history-view.coffee \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
, 2016-03-27 21:39:17, [u'Atom', u'clipboard-history-view.coffee \u2014 /Users/arjun/Experiments/experiment - clipit-normal']

  #task 10 - copy 1
  confirmed: (item) ->
    if item.clearHistory?
      @history = []
      @forceClear = true
    else
      @history.splice(@history.indexOf(item), 1)
      @history.push(item)
      atom.clipboard.write(item.text)
      atom.workspace.getActivePaneItem().insertText item.text,
        select: true
    @cancel(), 2016-03-27 21:39:17, [u'Atom', u'clipboard-history-view.coffee \u2014 /Users/arjun/Experiments/experiment - clipit-normal']
, 2016-03-27 21:39:53, [u'iTerm', u'1. python telem-mac.py -o "clipit-normal-real.txt" (Python)']
